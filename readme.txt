Программа выполняет сортировку данных файлов методом слияния. Результат сортировки записывается в новый файл. Сортировка
может выполняться по неубыванию и по невозрастанию. Данные в файлах должны быть предварительно отсортированы. Данные во
входных файлах могут быть двух видов: строки и целые числа. Каждая строка файла - новый элемент. Строка является корректной,
если она не пустая и не содержит пробельных символов. Строки сравниваются лексикографически в соответствии со стандартом
Юникод. Число является корректным, если оно целое и находится в диапазоне типа данных int. Если элемент файла является
некорректным или нарушает порядок сортировки, он не записывается в выходной файл, а попадает в лог ошибок.

Программа запускается из командной строки. Параметры программы и пути к файлам передаются с помощью аргументов. Допустимые
значения и порядок аргументов программы:

-help - вызов справки по аргументам программы. Необязательный аргумент
1. Режим сортировки: -a - сортировка по возрастанию, -d - сортировка по убыванию
Необязательный аргумент. По умолчанию выполняется сортировка по возрастанию
2. Тип входных данных: -s - строки, -i - целые числа. Обязательный аргумент
3. Путь к выходному файлу. Обязательный аргумент
4. Пути к входным файлам. Обязательный аргумент. Необходимо указать не менее одного файла
Если файлы находятся в корневой папке программы, вместо путей к файлам можно указывать имена файлов.

Пример команды для запуска программы из командной строки для сортировки строк четырех входных файлов по неубыванию:

java ru.focus_start_java_test_task.kononov_e_s.Main -a -s out.txt in1.txt in2.txt in3.txt in4.txt

Лог ошибок записывается в файл Error Log.txt в корневой папке программы. Файл перезаписывается при каждой успешной или
частичной сортировке без предупреждения для пользователя.

Формат ошибок:
"Порядковый номер входного файла", "Код ошибки", "Строка файла, содержащая ошибку"
Коды ошибок:
1 - нарушен порядок сортировки
2 - строка файла пустая или содержит пробельный символ (для входных данных типа строки)
3 - невозможно преобразовать строку файла в целое число (для входных данных типа целые числа)

Особенности реализации программы:

Сортировка является внешней. Входные файлы не полностью загружаются в оперативную память, а читаются построчно. Таким
образом, программа устойчива к большим файлам, не помещающимся целиком в оперативную память.

Сортировка более чем двух файлов разделена на два метода с целью повышения производительности. С помощью метода
<>FirstTwoFiles<>Sort производится сортировка первых двух входных файлов с проверкой корректности элементов обоих файлов.
Затем, в цикле, с помощью метода <>RemainingFiles<>Sort производится сортировка остальных файлов с проверкой только текущего
второго файла, т.к. текущий первый файл является выходным файлом метода <>FirstTwoFiles<>Sort и не содержит некорректных
строк. Если во время выполнения данного цикла происходит ошибка IOException, программа завершается и записывает в выходной
файл временный выходной файл с прошлой итерации цикла. Таким образом, при возникновении ошибки, сортировка выполняется частично.